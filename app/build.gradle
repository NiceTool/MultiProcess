apply plugin: 'com.android.application'


def ver = "3.0.0"
//demo appkey
def demoAppkey = "test"
android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 3
        versionName "${ver}"
        multiDexEnabled true
        buildConfigField "boolean", "USE_MULTI_TEST", "false"
        buildConfigField "String", "DEMO_APPKEY", "\"${demoAppkey}\""
    }
    signingConfigs {
        myConfig {
            storeFile file("../keystore/device.jks")
            storePassword "analysys"
            keyAlias "key0"
            keyPassword "analysys"

            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules-jar.pro'
            signingConfig signingConfigs.myConfig
            multiDexKeepProguard file('multidex-config.pro')
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules-jar.pro'
            signingConfig signingConfigs.myConfig
            multiDexKeepProguard file('multidex-config.pro')
        }
    }
    // sourceSets {
    //     main {
    //         manifest.srcFile 'AndroidManifest.xml'
    //         java.srcDirs = ['src']
    //         resources.srcDirs = ['src']
    //         aidl.srcDirs = ['src']
    //         renderscript.srcDirs = ['src']
    //         res.srcDirs = ['res']
    //         assets.srcDirs = ['assets']
    //         jniLibs.srcDirs = ['libs']
    //     }
    //     debug.setRoot('build-types/debug')
    //     release.setRoot('build-types/release')
    // }

    dexOptions {
        preDexLibraries false
        maxProcessCount 8
        javaMaxHeapSize "4g"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        warningsAsErrors false
        disable "UnusedResources"
        textOutput "stdout"
        textReport false
        disable 'RestrictedApi'
    }
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation project(':dev-sdk')
    //  DB查看
    implementation 'com.amitshekhar.android:debug-db:1.0.6'

//    implementation 'com.android.support:multidex:1.0.3'
//     // 网络不好时下载失败
//    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
//    implementation 'com.tencent.bugly:crashreport:latest.release'
//    //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0
//    implementation 'com.tencent.bugly:nativecrashreport:3.0.0'
}


assemble.doLast {
    android.applicationVariants.all { variant ->
        if (variant.name == "release") {
            variant.outputs.each { output ->
                File originFile = output.outputFile
                println originFile.absolutePath
                copy {
                    from originFile
                    into "$rootDir/release"
                    rename(originFile.name, "demo-${ver}.apk")
                }
            }
        }
    }
}