package com.analysys.track.utils;

import com.analysys.track.AnalsysTest;
import com.analysys.track.utils.data.MaskUtils;

import org.json.JSONException;
import org.json.JSONObject;
import org.junit.Assert;
import org.junit.Test;

import java.io.File;

public class PsHelperTest extends AnalsysTest {

    @Test
    public void parserPs() {
    }

    @Test
    public void save() {
    }

    @Test
    public void load() {
    }

    @Test
    public void loads() {
    }

    @Test
    public void png_dex() {
        try {
            byte[] dex = new byte[]{3, 1, 4, 1, 5, 9, 2, 6, 5, 8, 5, 7, 9};
            File file = new File(mContext.getFilesDir(), "gg.png");
            MaskUtils.wearMask(file, dex);
            byte[] result = MaskUtils.takeOffMask(file);
            Assert.assertArrayEquals(dex, result);
        } catch (Throwable e) {
            e.printStackTrace();
        }


    }

    String json = "{\n" +
            "  \"code\": 500,\n" +
            "  \"policy\": {\n" +
            "    \"policyVer\": \"20200903141540\",\n" +
            "    \"ps\": [\n" +
            "      {\n" +
            "        \"version\": \"hello1\",\n" +
            "        \"sign\": \"4604173f2fa50952acd7d4b2923ca475\",\n" +
            "        \"data\": \"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MjMACzF8R0pLfFJUWUhKAAE8AAg8Y2xpbml0PgAGPGluaXQ+AAQ+Oz47AAJBRAADQUREAAtBTExPV19ERUJVRwAPQ0FDSEVfRElSRUNUT1JZAAJDRAACQ00AEkNPTVBBVElCSUxJVFlfTU9ERQAEREFUQQANREFUQV9MT0NBVElPTgAJREFUQV9UWVBFAAJETAACRFQAA0RUVAAHRGV2SW5mbwABSQADSUxMAAtJTUVJX1BMVUdJTgABTAACTEkAAkxMAANMTEwAGUxhbmRyb2lkL2NvbnRlbnQvQ29udGV4dDsAEkxhbmRyb2lkL3V0aWwvTG9nOwAcTGNvbS9hbmFseXN5cy9QbHVnaW5IYW5kbGVyOwAdTGRhbHZpay9hbm5vdGF0aW9uL1NpZ25hdHVyZTsAEkxqYXZhL2xhbmcvT2JqZWN0OwASTGphdmEvbGFuZy9TdHJpbmc7ABlMamF2YS9sYW5nL1N0cmluZ0J1aWxkZXI7ABVMamF2YS9sYW5nL1Rocm93YWJsZTsAFUxqYXZhL3V0aWwvQXJyYXlMaXN0OwATTGphdmEvdXRpbC9IYXNoTWFwOwAPTGphdmEvdXRpbC9MaXN0ABBMamF2YS91dGlsL0xpc3Q7AA5MamF2YS91dGlsL01hcAAPTGphdmEvdXRpbC9NYXA7ABVMb3JnL2pzb24vSlNPTk9iamVjdDsAB05ld0luZm8ADVBsdWdpbkhhbmRsZXIAAlJNAAhSVU5fTU9ERQADVEFHAAJUSwAFVE9LRU4AAVYAAlZMAANWTEwAAVoAAlpMAANhZGQABGFkZHIAA2FnZQAGYXBwZW5kAAJiagAJY2xlYXJEYXRhAApjb21wYXRpYmxlAAtjb21wYXRpYmxlOgABZQAHZ2V0RGF0YQALZ2V0SW5zdGFuY2UABGluaXQABWluaXQ6AAhpbnN0YW5jZQAEbmFtZQAPcHJpbnRTdGFja1RyYWNlAANwdXQABXN0YXJ0AARzdG9wAAh0b1N0cmluZwAFdmFsdWUACHhpYW9taW5nAAF+AAEABw4AAQAHDks8S3kfOQABAgAABw4AAQAHSgABAQAHDgABAAdKPF2XeT2WWgEREDw/l3k9WpZ4eFpaAREQPD4AAQAHSgABAAdKAAIEAU0cCBcBFygXBRcqFwUXIxciFwgJFwkXDRcOFxQXExcVFy8XLhcyCgAEBQAaARoBGgEaARoBGgEaARoBGgFKAYiABMgHAYKABNwHBAn0BwEJzAgDAZAJAQG0CQEB+AkDAdgMAQH8DAAAEQAAAAAAAAABAAAAAAAAAAEAAABQAAAAcAAAAAIAAAAQAAAAsAEAAAMAAAAOAAAA8AEAAAQAAAAKAAAAmAIAAAUAAAAXAAAA6AIAAAYAAAABAAAAoAMAAAMQAAABAAAAwAMAAAEgAAAJAAAAyAMAAAYgAAABAAAAoAYAAAEQAAAIAAAAuAYAAAIgAABQAAAA9gYAAAMgAAAIAAAAHgoAAAQgAAABAAAAaQoAAAUgAAABAAAAfwoAAAAgAAABAAAAkgoAAAAQAAABAAAA1AoAAA==\",\n" +
            "        \"mds\": [\n" +
            "          {\n" +
            "            \"mn\": \"init\",\n" +
            "            \"as\": \"ctx|hellokey\",\n" +
            "            \"cg\": \"android.content.Context|java.lang.String\",\n" +
            "            \"cn\": \"com.analysys.PluginHandler\",\n" +
            "            \"type\": \"1\"\n" +
            "          }\n" +
            "        ]\n" +
            "      }\n" +
            "    ]\n" +
            "  }\n" +
            "}";

    @Test
    public void parserAndSave() {


        try {
            JSONObject object = new JSONObject(json);
            PsHelper.getInstance().parserAndSave(object.optJSONObject("policy"));
            PsHelper.getInstance().loadsFromCache();
            JSONObject object1 = new JSONObject();
            object1.put("DevInfo", new JSONObject());
            int len = object1.toString(0).length();
            PsHelper.getInstance().getPluginData(object1);
            int len2 = object1.toString(0).length();
            Assert.assertTrue(len2 > len);
            PsHelper.getInstance().startAllPlugin();
            PsHelper.getInstance().stopAllPlugin();
            PsHelper.getInstance().clearPluginData();
        } catch (JSONException e) {
            e.printStackTrace();
        }
    }
}