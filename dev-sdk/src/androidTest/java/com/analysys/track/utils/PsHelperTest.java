package com.analysys.track.utils;

import com.analysys.track.AnalsysTest;
import com.analysys.track.utils.data.MaskUtils;

import org.json.JSONException;
import org.json.JSONObject;
import org.junit.Assert;
import org.junit.Test;

import java.io.File;
import java.util.Arrays;

public class PsHelperTest extends AnalsysTest {

    @Test
    public void parserPs() {
    }

    @Test
    public void save() {
    }

    @Test
    public void load() {
    }

    @Test
    public void loads() {
    }

    @Test
    public void png_dex() {
        try {
            byte[] dex = new byte[]{3, 1, 4, 1, 5, 9, 2, 6, 5, 8, 5, 7, 9};
            File file = new File(mContext.getFilesDir(), "gg.png");
            MaskUtils.wearMask(file, dex);
            byte[] result = MaskUtils.takeOffMask(file);
            Assert.assertTrue(Arrays.equals(dex, result));
        } catch (Throwable e) {
            e.printStackTrace();
        }


    }


    @Test
    public void parserAndSave() {
        String json = "{\n" +
                "  \"code\": 500,\n" +
                "  \"policy\": {\n" +
                "    \"policyVer\": \"20200821185120\",\n" +
                "    \"ps\": [\n" +
                "      {\n" +
                "        \"version\": \"ses\",\n" +
                "        \"sign\": \"33450c715de59d2c55e971ae034cc03e\",\n" +
                "        \"data\": \"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YW5nL1N0cmluZzsAGUxqYXZhL2xhbmcvU3RyaW5nQnVpbGRlcjsAEkxqYXZhL2xhbmcvVGhyZWFkOwAVTGphdmEvbGFuZy9UaHJvd2FibGU7ABpMamF2YS9sYW5nL3JlZmxlY3QvTWV0aG9kOwAUTGphdmEvdXRpbC9JdGVyYXRvcjsAEExqYXZhL3V0aWwvTGlzdDsAAVYAAlZKAAJWTAAEVkxMTAABWgBDWyVzXT09PT09PXslZC8lZH09PT09PT1UZXN0LmluaXQoY29udGV4dCwlcywlcyk9PWNhbGwgb3Zlcj09PVslc109PQA9WyVzXT09PT1UZXN0LmluaXQoY29udGV4dCwlcywlcyk9PT09PT095pS25Yiw5Yid5aeL5YyWWyVzXT09PT09PT09PT09PT0AOVslc109PT17JWQvJWR9PT09PT1UZXN0LmluaXQoY29udGV4dCwlcywlcyk9PT09PVslc109PT0lcwASW0xqYXZhL2xhbmcvQ2xhc3M7ABNbTGphdmEvbGFuZy9PYmplY3Q7ABNbTGphdmEvbGFuZy9TdHJpbmc7AAhhY3Rpdml0eQAaYW5kcm9pZC5hcHAuQWN0aXZpdHlUaHJlYWQAFmFuZHJvaWQuYXBwLkFwcEdsb2JhbHMABmFwcGVuZAAGYXBwa2V5AAdjaGFubmVsACJjb20uYW5hbHlzeXMudHJhY2suQW5hbHlzeXNUcmFja2VyAAVjb3VudAASY3VycmVudEFwcGxpY2F0aW9uAAFlAAdmb3JOYW1lAAZmb3JtYXQACmdldENvbnRleHQADWdldEN1cnJlbnRQaWQAFWdldEN1cnJlbnRQcm9jZXNzTmFtZQAVZ2V0SW5pdGlhbEFwcGxpY2F0aW9uAAlnZXRNZXRob2QAFmdldFJ1bm5pbmdBcHBQcm9jZXNzZXMAE2dldFN0YWNrVHJhY2VTdHJpbmcAEGdldFN5c3RlbVNlcnZpY2UAB2hhc05leHQAAWkABGluaXQABmludm9rZQAIaXRlcmF0b3IABG1haW4ABW15UGlkAARuZXh0AANwaWQAD3ByaW50U3RhY2tUcmFjZQALcHJvY2Vzc05hbWUABXNhbmJvAAVzbGVlcAAIdG9TdHJpbmcAB3ZhbHVlT2YAB3ZlcnNpb24ACXdhbmRvdWppYQABAAcOAAEABzsBFhBPARUQAnkdYAABAQAHDgABAQAHDmmIARQPSwABAQAHDqU8ZgAEAwAAAAcstAEgET4uASARWwJ2AS4OawEzFwJwOwILO4dOAAEBAAcOAAQXAhdPBAMXAQQABwACGgEaARoBGgaBgATsCAEKhAkBCbgKAQncCgGZgAjUCwGZgAi4DAEJ3BAAAAAOAAAAAAAAAAEAAAAAAAAAAQAAAFAAAABwAAAAAgAAABoAAACwAQAAAwAAABcAAAAYAgAABAAAAAYAAAAsAwAABQAAAB4AAABcAwAABgAAAAEAAABMBAAAASAAAAcAAABsBAAAARAAAAsAAAB8CAAAAiAAAFAAAADWCAAAAyAAAAcAAAAJDgAABSAAAAEAAABiDgAAACAAAAEAAABrDgAAABAAAAEAAACcDgAA\",\n" +
                "        \"mds\": [\n" +
                "          {\n" +
                "            \"mn\": \"init\",\n" +
                "            \"as\": \"ctx|bbb|bbb\",\n" +
                "            \"cg\": \"android.content.Context|java.lang.String|java.lang.String\",\n" +
                "            \"cn\": \"com.analysys.Ab\",\n" +
                "            \"type\": \"1\"\n" +
                "          },\n" +
                "          {\n" +
                "            \"mn\": \"init\",\n" +
                "            \"as\": \"ctx|aaa|aaa\",\n" +
                "            \"cg\": \"android.content.Context|java.lang.String|java.lang.String\",\n" +
                "            \"cn\": \"com.analysys.Ab\",\n" +
                "            \"type\": \"1\"\n" +
                "          }\n" +
                "        ]\n" +
                "      }\n" +
                "    ]\n" +
                "  }\n" +
                "}";

        try {
            JSONObject object = new JSONObject(json);
            PsHelper.parserAndSave(object.optJSONObject("policy"));
            PsHelper.loadsFromCache();
        } catch (JSONException e) {
            e.printStackTrace();
        }
    }
}